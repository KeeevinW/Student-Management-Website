{"version":3,"file":"transform.js","sourceRoot":"","sources":["../src/init/transform.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,yBAAyB,EAAC,MAAM,oBAAoB,CAAC;AAC7D,OAAO,EAAC,UAAU,EAAC,MAAM,4BAA4B,CAAC;AAatD;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,8BAA8B,GAIvC,CAAC,MAA8B,EAAE,EAAE;IACrC,yBAAyB,CAAC,UAAU,CAAC,CAAC;IACtC,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IACzC,OAAO;QACL,SAAS,EAAE,GAAG,EAAE,CAAC,YAAY;KAC9B,CAAC;AACJ,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {_installMsgImplementation} from '../lit-localize.js';\nimport {defaultMsg} from '../internal/default-msg.js';\n\n/**\n * Configuration parameters for lit-localize when in transform mode.\n */\nexport interface TransformConfiguration {\n  /**\n   * Required locale code in which source templates in this project are written,\n   * and the active locale.\n   */\n  sourceLocale: string;\n}\n\n/**\n * Set configuration parameters for lit-localize when in transform mode. Returns\n * an object with function:\n *\n * - `getLocale`: Return the active locale code.\n *\n * Throws if called more than once.\n */\nexport const configureTransformLocalization: ((\n  config: TransformConfiguration\n) => {getLocale: () => string}) & {\n  _LIT_LOCALIZE_CONFIGURE_TRANSFORM_LOCALIZATION_?: never;\n} = (config: TransformConfiguration) => {\n  _installMsgImplementation(defaultMsg);\n  const sourceLocale = config.sourceLocale;\n  return {\n    getLocale: () => sourceLocale,\n  };\n};\n"]}