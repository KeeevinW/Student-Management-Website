{"version":3,"file":"fnv1a64.js","sourceRoot":"","sources":["../src/internal/fnv1a64.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,wCAAwC;AACxC,iGAAiG;AACjG,EAAE;AACF,WAAW;AACX,mDAAmD;AACnD,4BAA4B;AAC5B,uCAAuC;AACvC,qBAAqB;AACrB,EAAE;AACF,8EAA8E;AAE9E,MAAM,EAAE,GAAa,EAAE,CAAC;AACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC5B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;CAC9D;AAED;;;;;GAKG;AACH,MAAM,UAAU,OAAO,CAAC,GAAW;IACjC,IAAI,EAAE,GAAG,CAAC,EACR,EAAE,GAAG,MAAM,EACX,EAAE,GAAG,CAAC,EACN,EAAE,GAAG,MAAM,EACX,EAAE,GAAG,CAAC,EACN,EAAE,GAAG,MAAM,EACX,EAAE,GAAG,CAAC,EACN,EAAE,GAAG,MAAM,CAAC;IAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,EAAE,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACxB,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;QACd,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;QACd,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;QACd,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;QACd,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACd,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACd,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAChB,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;QAChB,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;QAChB,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;QAChB,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;QAChC,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;KACjB;IAED,OAAO,CACL,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;QACZ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;QACZ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;QACZ,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,CACb,CAAC;AACJ,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2014 Travis Webb\n * SPDX-License-Identifier: MIT\n */\n\n// This module is derived from the file:\n// https://github.com/tjwebb/fnv-plus/blob/1e2ce68a07cb7dd4c3c85364f3d8d96c95919474/index.js#L309\n//\n// Changes:\n// - Only the _hash64_1a_fast function is included.\n// - Removed loop unrolling.\n// - Converted to TypeScript ES module.\n// - var -> let/const\n//\n// TODO(aomarks) Upstream improvements to https://github.com/tjwebb/fnv-plus/.\n\nconst hl: string[] = [];\nfor (let i = 0; i < 256; i++) {\n  hl[i] = ((i >> 4) & 15).toString(16) + (i & 15).toString(16);\n}\n\n/**\n * Perform a FNV-1A 64-bit hash of the given string (as UTF-16 code units), and\n * return a hexadecimal digest (left zero padded to 16 characters).\n *\n * @see {@link http://tools.ietf.org/html/draft-eastlake-fnv-06}\n */\nexport function fnv1a64(str: string) {\n  let t0 = 0,\n    v0 = 0x2325,\n    t1 = 0,\n    v1 = 0x8422,\n    t2 = 0,\n    v2 = 0x9ce4,\n    t3 = 0,\n    v3 = 0xcbf2;\n\n  for (let i = 0; i < str.length; i++) {\n    v0 ^= str.charCodeAt(i);\n    t0 = v0 * 435;\n    t1 = v1 * 435;\n    t2 = v2 * 435;\n    t3 = v3 * 435;\n    t2 += v0 << 8;\n    t3 += v1 << 8;\n    t1 += t0 >>> 16;\n    v0 = t0 & 65535;\n    t2 += t1 >>> 16;\n    v1 = t1 & 65535;\n    v3 = (t3 + (t2 >>> 16)) & 65535;\n    v2 = t2 & 65535;\n  }\n\n  return (\n    hl[v3 >> 8] +\n    hl[v3 & 255] +\n    hl[v2 >> 8] +\n    hl[v2 & 255] +\n    hl[v1 >> 8] +\n    hl[v1 & 255] +\n    hl[v0 >> 8] +\n    hl[v0 & 255]\n  );\n}\n"]}